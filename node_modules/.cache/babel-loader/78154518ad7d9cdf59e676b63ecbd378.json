{"ast":null,"code":"var _jsxFileName = \"/Users/iansmbpro/Documents/Boot_Camp/post_camp_work/game-aggregator/game-aggregator/src/pages/PlatformPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CardContainer from '../components/CardContainer/CardContainer';\nimport Header from '../components/Header/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PlatformPage({\n  apiKey\n}) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [platformDetails, setPlatformDetails] = useState({});\n  const [platformGames, setPlatformGames] = useState([]);\n  useEffect(() => {\n    fetch(`https://api.rawg.io/api/games?platforms=${id}&key=${apiKey}`).then(res => {\n      const result = res.json();\n      return result;\n    }).then(result => {\n      // setIsLoaded(true);\n      console.log(result.results);\n      setPlatformGames(result);\n    }, error => {\n      // setIsLoaded(true);\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    fetch(`https://api.rawg.io/api/platforms/${id}?key=${apiKey}`).then(res => {\n      const result = res.json();\n      return result;\n    }).then(result => {\n      // setIsLoaded(true);\n      console.log(result.results);\n      setPlatformDetails(result);\n    }, error => {\n      // setIsLoaded(true);\n      console.log(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      header: platformDetails.name,\n      subHeader: platformDetails.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CardContainer, {\n      gameData: platformGames,\n      apiKey: apiKey\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PlatformPage, \"3AxMvFvIwUlnUVHAX1lfppx8Cpk=\", false, function () {\n  return [useParams];\n});\n\n_c = PlatformPage;\nexport default PlatformPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlatformPage\");","map":{"version":3,"sources":["/Users/iansmbpro/Documents/Boot_Camp/post_camp_work/game-aggregator/game-aggregator/src/pages/PlatformPage.js"],"names":["React","useState","useEffect","useParams","CardContainer","Header","PlatformPage","apiKey","id","platformDetails","setPlatformDetails","platformGames","setPlatformGames","fetch","then","res","result","json","console","log","results","error","name","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,aAAP,MAA0B,2CAA1B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;;AAEA,SAASC,YAAT,CAAsB;AAACC,EAAAA;AAAD,CAAtB,EAA+B;AAAA;;AAE3B,QAAM;AAAEC,IAAAA;AAAF,MAASL,SAAS,EAAxB;AAEA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AAGAC,EAAAA,SAAS,CAAC,MAAK;AACXW,IAAAA,KAAK,CAAE,2CAA0CL,EAAG,QAAOD,MAAO,EAA7D,CAAL,CACCO,IADD,CACOC,GAAD,IAAS;AACX,YAAMC,MAAM,GAACD,GAAG,CAACE,IAAJ,EAAb;AACA,aAAOD,MAAP;AACH,KAJD,EAMCF,IAND,CAOKE,MAAD,IAAY;AACZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACAR,MAAAA,gBAAgB,CAACI,MAAD,CAAhB;AACH,KAXD,EAYCK,KAAD,IAAS;AACL;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAfD;AAgBH,GAjBQ,EAiBP,EAjBO,CAAT;AAmBAnB,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,KAAK,CAAE,qCAAoCL,EAAG,QAAOD,MAAO,EAAvD,CAAL,CACCO,IADD,CACOC,GAAD,IAAS;AACX,YAAMC,MAAM,GAACD,GAAG,CAACE,IAAJ,EAAb;AACA,aAAOD,MAAP;AACH,KAJD,EAMCF,IAND,CAOKE,MAAD,IAAY;AACZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,MAAM,CAACI,OAAnB;AACAV,MAAAA,kBAAkB,CAACM,MAAD,CAAlB;AACH,KAXD,EAYCK,KAAD,IAAS;AACL;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,KAfD;AAgBH,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,sBACI;AAAA,4BACA,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAEZ,eAAe,CAACa,IAAhC;AAAsC,MAAA,SAAS,EAAEb,eAAe,CAACc;AAAjE;AAAA;AAAA;AAAA;AAAA,YADA,eAEA,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEZ,aAAzB;AAAwC,MAAA,MAAM,EAAEJ;AAAhD;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GArDQD,Y;UAEUH,S;;;KAFVG,Y;AAuDT,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport CardContainer from '../components/CardContainer/CardContainer';\nimport Header from '../components/Header/Header';\n\nfunction PlatformPage({apiKey}){\n    \n    const { id } = useParams()\n    \n    const [platformDetails, setPlatformDetails] = useState({})\n    const [platformGames, setPlatformGames] = useState([])\n    \n    \n    useEffect(() =>{\n        fetch(`https://api.rawg.io/api/games?platforms=${id}&key=${apiKey}`)\n        .then((res) => {\n            const result=res.json();\n            return result;\n        }\n        )\n        .then(\n            (result) => {\n            // setIsLoaded(true);\n            console.log(result.results)\n            setPlatformGames(result);\n        },\n        (error)=>{\n            // setIsLoaded(true);\n            console.log(error)\n        })\n    },[])\n\n    useEffect(()=>{\n        fetch(`https://api.rawg.io/api/platforms/${id}?key=${apiKey}`)\n        .then((res) => {\n            const result=res.json();\n            return result;\n        }\n        )\n        .then(\n            (result) => {\n            // setIsLoaded(true);\n            console.log(result.results)\n            setPlatformDetails(result);\n        },\n        (error)=>{\n            // setIsLoaded(true);\n            console.log(error)\n        })\n    } ,[])\n\n    return(\n        <div>\n        <Header header={platformDetails.name} subHeader={platformDetails.description}/>\n        <CardContainer gameData={platformGames} apiKey={apiKey}/>\n        </div>\n    )\n\n}\n\nexport default PlatformPage;"]},"metadata":{},"sourceType":"module"}